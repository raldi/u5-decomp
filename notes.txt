If you see a memory address in the 0x5xxx range, subtract 0x55a6 and
look it up in the SAVED.GAM table:
https://wiki.ultimacodex.com/wiki/Ultima_V_internal_formats#SAVED.GAM


If you see one in the -0x4xxx range, add it to 0x5b36 and look it up in
DATA.OVL:
https://wiki.ultimacodex.com/wiki/Ultima_V_internal_formats#DATA.OVL

For instance, if you see -0x45ea, calculate hex(0x5b36-0x45ea) == 0x154c
and note that this is the start of the sprite flags table.

If you see one in the 0x3xxx or 0x4xxx range, add 0x10 and look it up
in DATA.OVL. So if you see 0x3f5c, look up 3f6c.

# Tool notes

Based on string "MS Run-Time Library - Copyright (c) 1988, Microsoft
Corp" found in DATA.OVL, the compiler used to originally compile the
files was probably Microsoft C Compiler 5.1 for DOS. (Not 5.0, that
doesn't have 1988 in the copyright string.)

The OVL linking scheme probably uses a different linker from than the
one provided by the Microsoft compiler. Probably a Phoenix Technologies
overlay linker identified by the string "Copyright (C) 1984, 1985, 1986
by Phoenix Software Associates Ltd." found in ULTIMA.EXE.

# OVL file details

OVLs have modular extra code (except DATA.OVL that's all data).
ULTIMA.EXE contains the main program code and calls the OVLs.

OVLs have assigned regions, there can be only one OVL loaded in each
region, and when a function from a different OVL is called, the old OVL
needs to be swapped out and the new one loaded in its place. You can
monitor how OVL files are being accessed from file load messages in a
debugger-enabled DosBox's event window.

The layers and OVLs are as follows:

(town mainout dungeon intro)
(flames npc combat blckthrn lookobj dnglook outsubs shoppes endgame)
(sjog cmds cast talk)
(cast2 zstats comsubs shoppes2 shoppes3 font)
(data)

Functions in loaded OVLs are always at same memory addresses, so the
only question for using them is whether the correct OVL has been loaded
to memory.

OVL file details

    TOWN.OVL      * town mode *
    MAINOUT.OVL   * overland mode *
    DUNGEON.OVL   * dungeon mode *
    INTRO.OVL     intro screen animation?

    FLAMES.OVL    loaded during intro screen, extra data?
    NPC.OVL       town NPC routines?
    COMBAT.OVL    * combat mode *
    BLCKTHRN.OVL  torture room scene?
    LOOKOBJ.OVL   L)ook command results
    DNGLOOK.OVL   dungeon mode subroutines
    OUTSUBS.OVL   overland mode subroutines
    SHOPPES.OVL   shopping in town?
    ENDGAME.OVL   outro?

    SJOG.OVL      commands that work in combat, search, jimmy, open, get
    CMDS.OVL      out-of-combat commands like ignite torch, hole up
    CAST.OVL      magic
    TALK.OVL      NPC conversation

    CAST2.OVL     magic, mixing spells, also saving the game?
    ZSTATS.OVL    Character stats and inventory view
    COMSUBS.OVL   combat mode subroutines
    SHOPPES2.OVL  shopping
    SHOPPES3.OVL  shopping
    FONT.OVL      text display?

    DATA.OVL      game data, no code

OVLs loaded by command keys:

    a: (switch to combat mode if there's an enemy)
    b: CMDS.OVL
    c: CAST.OVL CAST2.OVL
    e: -
    f: CMDS.OVL
    g: SJOG.OVL
    h: CMDS.OVL
    i: CMDS.OVL
    j: SJOG.OVL
    k: CMDS.OVL
    l: LOOKOBJ.OVL
    m: CMDS.OVL CAST2.OVL
    n: CMDS.OVL
    o: SJOG.OVL
    p: CMDS.OVL
    q: CAST2.OVL (huh? savegame function is in magic module?)
    r: ZSTATS.OVL
    s: SJOG.OVL
    t: TALK.OVL (only in town)
    u: CAST.OVL ZSTATS.OVL
    v: LOOKOBJ.OVL
    x: ? (didn't have a boat in test save)
    y: CMDS.OVL
    z: ZSTATS.OVL
